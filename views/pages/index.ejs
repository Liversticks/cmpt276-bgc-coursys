<!DOCTYPE html>
<html>

<head>
  <%- include('../partials/header.ejs') %>
</head>

<body>

  <% if (isOrganizer) { %>
  <%- include('../partials/orgNav.ejs') %>
  <% } else { %>
  <%- include('../partials/nav.ejs') %>
  <% } %>



  <div class="container">
    <div class="row pt-5 pb-2 justify-content-between">
      <div class="col-6">
        <h2>Upcoming courses
          <!--<i class="material-icons">event</i>-->
        </h2>
      </div>
    </div>
    <table id="tb" class="table table-striped col-12" data-toggle="table" data-pagination="true" data-search="true"
      data-unique-id="id">
      <thead>
        <tr>
          <th class="d-none" scope="col" data-field="id" data-sortable="false"></th>
          <th scope="col" data-field="title" data-sortable="true">Course Name</th>
          <th scope="col" data-field="topic" data-sortable="true">Topic</th>
          <th scope="col" data-field="delivery" data-sortable="true">Location</th>
          <th scope="col" data-field="sessions" data-sortable="true">Sessions</th>
          <th scope="col" data-field="rdeadline" data-sortable="true">Registration Deadline</th>
          <th scope="col" data-field="nextSession" data-sortable="true">Next Session</th>
          <th scope="col" data-field="seats" data-sortable="true">Seats</th>
          <th scope="col" data-field="status" data-sortable="true">Status</th>
        </tr>
      </thead>
      <tbody>
        <% data.forEach((item, index) => { %>
        <tr>
          <th class="d-none" id=<%= item.id %>><%= item.id %></th>
          <td><%= item.title %></td>
          <td><%= item.topic %></td>
          <td><%= item.delivery %></td>
          <td><%= item.sessions %></td>
          <td><%= item.time %></td>
          <td><%= item.nextSession %></td>
          <% if (item.position > item.maxSeats) { %>
          <td><%= item.seats %>/<%= item.maxSeats %> [<%= (item.position-item.maxSeats) %>]</td>
          <% } else { %>
          <td><%= item.seats %>/<%= item.maxSeats %></td>
          <% } %>
          <td><%= item.status %></td>
        </tr>
        <% }); %>
      </tbody>
    </table>
  </div>
  <script src="https://unpkg.com/bootstrap-table@1.17.1/dist/bootstrap-table.min.js"></script>
  <script>
    function handleCellClick(event, field, value, row, $element) {
      // console.log(field);
      $(location).attr('href', '/courses/' + row.id);
    }
    function addRow(course) {
      if (course.position > course.maxSeats) {
        // handle waitlist
      }
      $("#tb").bootstrapTable('insertRow', {
        index: 0,
        row: {
          id: course.id,
          title: course.title,
          topic: course.topic,
          delivery: course.delivery,
          sessions: course.sessions,
          nextSession: course.nextSession,
          seats: (course.seats + "/" + course.maxSeats),
          rdeadline: course.rdeadline,
          status: course.status || 'N/A',
        }
      });
    }
    function removeRow(id) {
      $("#tb").bootstrapTable('removeByUniqueId', id);
    }
    function updateCourse(id, course) {
      $("#tb").bootstrapTable('updateByUniqueId', {
        id: id,
        row: {
          id: course.id,
          title: course.title,
          topic: course.topic,
          delivery: course.delivery,
          sessions: course.sessions,
          nextSession: course.nextSession,
          seats: (course.seats + "/" + course.maxSeats),
          rdeadline: course.rdeadline,
          status: course.status || 'N/A',
        }
      })
    }
    // force reload when using back button
    if (performance.navigation.type == 2) {
      location.reload(true);
    }
    $("#tb").on('click-cell.bs.table', handleCellClick);

    socket.on('courseAdd', (data) => {
      console.log(data.course);
      // location.reload(true);
      if (data.course.status = 'Open') { addRow(data.course); }
    });
    socket.on('courseDelete', (data) => {
      removeRow(data.courseID);
    });
    socket.on('courseEnroll', (data) => {
      $.get("/coursedata/" + data.courseID, (response, status) => {
        updateCourse(data.courseID, response.json());
      });
    });
    socket.on('courseWithdraw', (data) => {
      $.get("/coursedata/" + data.courseID, (response, status) => {
        updateCourse(data.courseID, response.json());
      });
    });
  </script>
</body>

</html>